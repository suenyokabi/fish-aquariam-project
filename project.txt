#include<windows.h>
#include<iostream>
#include<stdlib.h>
#include<math.h>
#include<cstring>
#include<GL/gl.h>
#include<GL/glu.h>
#include<GL/glut.h>

using namespace std;

float _fish1Xaxis=5.0f;
float _fish1Yaxis=0.3f;
float _bubble1Yaxis=-4.0;
float _bubble2Yaxis=-2.0;
void update(int){

	if(_fish1Xaxis<-4)
	{
		_fish1Xaxis=1.9f;
		
	}
	_fish1Xaxis-=0.01f;
	_fish1Yaxis=sin(_fish1Xaxis*2)/3+0.8;
	
	if(_fish1Xaxis<0)
	{
		 _fish1Yaxis*(-1);
	}
	

		 if(_bubble1Yaxis>3.0)
		 {
			 _bubble1Yaxis=(-4.0);
			  
		 } 
		 _bubble1Yaxis+=0.02;

	
		 if(_bubble2Yaxis>2.0)
		 {
			 _bubble2Yaxis=(-2.0);
			}
		  _bubble2Yaxis+=0.04;
		 

		 glutPostRedisplay();
		 glutTimerFunc(25,update,0);

	}


void bubblecode(float y){
	glPushMatrix();
	glScalef(1.9f,1.9f,0.0f);
	glTranslated(0.4,y,0.0);
	glBegin(GL_POLYGON);
	glColor3f(0.878,1.000,1.000);
	for(int i=0;i<200;i++){
		float pi=3.1416;
		float A=(i*2*pi)/50;
		float r=0.009;
		float x=r*cos(A);
		float y=r*sin(A);
		glVertex2f(x,y);
	}
	glEnd();
	glPopMatrix();

}
void Drawbubble1()
{
	glTranslated(0.0,_bubble1Yaxis,0.0);
	for(float f=0.1;f<1;f+=0.09){
		bubblecode(f);
	}
	
}
void Drawbubble2(){
glTranslated(0.0,_bubble2Yaxis,0.0);
for(float f=0.3;f<3;f+=0.1)
{
	bubblecode(f);
}
}


void DrawWater(){
glBegin(GL_POLYGON);
glColor3f(0.118,0.565,1.000);
glVertex3f(0.0,0.0,0.0);
glVertex3f(1.0,0.0,0.0);
glColor3f(1.0,1.0,1.0);
glVertex3f(1.0,1.0,0.0);
glVertex3f(0.0,2.0,0.0);
glEnd();
}

void Drawfish1()
{
glScalef(0.6f,0.6f,0.0f);
glTranslatef(_fish1Xaxis,_fish1Yaxis,0.0);
glPushMatrix();
glColor3f(0.000,0.749,1.000);
//fish tail
glBegin(GL_POLYGON);
glVertex3f(0.428,0.127,0.0);
glVertex3f(0.517,0.057,0.0);
glVertex3f(0.449,0.108,0.0);
glVertex3f(0.488,0.162,0.0);
glVertex3f(0.486,0.148,0.0);
glVertex3f(0.514,0.282,0.0);//c
glVertex3f(0.528,0.318,0.0);//c
glVertex3f(0.429,0.245,0.0);
glEnd();
//fish wing top
glColor3f(0.000,0.749,1.000);
glBegin(GL_POLYGON);
glVertex3f(0.160,0.326,0.0);
glVertex3f(0.177,0.326,0.0);
glVertex3f(0.193,0.334,0.0);
glVertex3f(0.221,0.346,0.0);
glVertex3f(0.224,0.348,0.0);
glVertex3f(0.224,0.348,0.0);
glVertex3f(0.265,0.345,0.0);
glVertex3f(0.303,0.333,0.0);
glVertex3f(0.276,0.304,0.0);
glEnd();
//fish body
glColor3f(0.3,0.3,1);
glBegin(GL_POLYGON);
glVertex3f(0.429,0.243,0.0);
glVertex3f(0.306,0.276,0.0);
glVertex3f(0.292,0.301,0.0);
glVertex3f(0.226,0.316,0.0);
glVertex3f(0.200,0.319,0.0);
glVertex3f(0.164,0.309,0.0);
glVertex3f(0.117,0.288,0.0);
glVertex3f(0.077,0.256,0.0);
glVertex3f(0.052,0.222,0.0);
glVertex3f(0.038,0.187,0.0);
glVertex3f(0.041,0.144,0.0);
glVertex3f(0.061,0.119,0.0);
glVertex3f(0.108,0.083,0.0);
glVertex3f(0.168,0.060,0.0);
glVertex3f(0.204,0.053,0.0);
glVertex3f(0.231,0.054,0.0);
glVertex3f(0.288,0.067,0.0);
glVertex3f(0.340,0.087,0.0);
glVertex3f(0.403,0.115,0.0);
glVertex3f(0.428,0.127,0.0);
glEnd();
//fish eye

glPushMatrix();
glTranslatef(0.1,0.22,0.0);
glBegin(GL_POLYGON);
glColor3f(1.0,1.,1.);
	for(int i=0;i<200;i++)
	{
		float pi=3.1416;
		float A=(i*2*pi)/50;
		float r=0.018;
		float x=r*cos(A);
		float y=r*sin(A);
		glVertex2f(x,y);


	}
glEnd();
//inner ball
glBegin(GL_POLYGON);
glColor3f(0.0,0.0,0.0);
for(int i=0;i<200;i++){
	    float pi=3.1416;
		float A=(i*2*pi)/50;
		float r=0.005;
		float x=r*cos(A);
		float y=r*sin(A);
		glVertex2f(x,y);

}
glEnd();
glPopMatrix();
//fish mouth
glColor3f(0.0,0.0,0.0);
glLineWidth(2.0);
glBegin(GL_LINES);
glVertex3f(0.048,0.135,0.0);
glVertex3f(0.077,0.137,0.0);
glVertex3f(0.077,0.137,0.0);
glVertex3f(0.091,0.141,0.0);
glEnd();
//fish below wing
glColor3f(0.000,0.749,1.000);
glBegin(GL_POLYGON);
glVertex3f(0.165,0.188,0.0);
glVertex3f(0.169,0.098,0.0);
glVertex3f(0.182,0.086,0.0);
glVertex3f(0.213,0.076,0.0);
glVertex3f(0.253,0.075,0.0);
glVertex3f(0.281,0.082,0.0);
glVertex3f(0.286,0.094,0.0);
glVertex3f(0.281,0.102,0.0);
glVertex3f(0.267,0.113,0.0);
glEnd();
glPopMatrix();







}
void display(void){
	glClear(GL_COLOR_BUFFER_BIT);
	//positioning
	glPushMatrix();
	DrawWater();//draw  water
	glPopMatrix();

	glPushMatrix();
	Drawfish1();
	glPopMatrix();


	glPushMatrix();
	Drawbubble1();
	glPopMatrix();

	glPushMatrix();
	Drawbubble2();
	glPopMatrix();


	glFlush();

}
void init(void)
{
	//select clearing background color
	glClearColor(0.0,0.0,0.0,0.0);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	glOrtho(0.0,1.0,0.0,1.0,-1.0,1.0);
}
int main(int argc, char**argv)
{
	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_RGB | GLUT_SINGLE);

	glutInitWindowPosition(200,100);
	glutInitWindowSize(800,600);

	glutCreateWindow("fish aquariam");
	init();
	glutDisplayFunc(display);
	glutTimerFunc(25,update,0);
	glutMainLoop();
	return 0;


}
 